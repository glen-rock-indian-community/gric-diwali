package org.glenrockindiancommunity.model;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

@DynamoDBTable(tableName = "Family")
public class Family {

	private String id;
	private String familyNameCode;
	private String town;
	private Integer adultCount;
	private Integer childCount;
	private Long amount;
	private String paymentConfirmationId;
	private List<FamilyMember> familyMembers = new ArrayList<FamilyMember>();;

	public Family() {
		// default constructor
	}

	public Family(String familyNameCode, String town, Integer adultCount, Integer childCount) {
		this.familyNameCode = familyNameCode + "-" + UUID.randomUUID().toString().replaceAll("-", "");
		this.town = town;
		this.adultCount = adultCount;
		this.childCount = childCount;
	}

	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	public String getId() {
		return id;
	}

	@DynamoDBAttribute
	public String getFamilyNameCode() {
		return familyNameCode;
	}

	@DynamoDBAttribute
	public String getTown() {
		return town;
	}

	@DynamoDBAttribute
	public Integer getAdultCount() {
		return adultCount;
	}

	@DynamoDBAttribute
	public Integer getChildCount() {
		return childCount;
	}

	@DynamoDBAttribute
	public String getPaymentConfirmationId() {
		return paymentConfirmationId;
	}

	@DynamoDBAttribute(attributeName = "FamilyMembers")
	public List<FamilyMember> getFamilyMembers() {
		return familyMembers;
	}

	public void setId(String id) {
		this.id = id;
	}

	public void setFamilyNameCode(String familyNameCode) {
		this.familyNameCode = familyNameCode;
	}

	public void setTown(String town) {
		this.town = town;
	}

	public void setAdultCount(Integer adultCount) {
		this.adultCount = adultCount;
	}

	public void setChildCount(Integer childCount) {
		this.childCount = childCount;
	}

	public void setPaymentConfirmationId(String paymentConfirmationId) {
		this.paymentConfirmationId = paymentConfirmationId;
	}

	public void setFamilyMembers(List<FamilyMember> familyMembers) {
		this.familyMembers = familyMembers;
	}

	public void addFamilyMember(FamilyMember familyMember) {
		this.familyMembers.add(familyMember);
	}

	public void addFamilyMembers(List<FamilyMember> familyMembers) {
		this.familyMembers.addAll(familyMembers);
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((familyNameCode == null) ? 0 : familyNameCode.hashCode());
		result = prime * result + ((paymentConfirmationId == null) ? 0 : paymentConfirmationId.hashCode());
		result = prime * result + ((town == null) ? 0 : town.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Family other = (Family) obj;
		if (familyNameCode == null) {
			if (other.familyNameCode != null)
				return false;
		} else if (!familyNameCode.equals(other.familyNameCode))
			return false;
		if (paymentConfirmationId == null) {
			if (other.paymentConfirmationId != null)
				return false;
		} else if (!paymentConfirmationId.equals(other.paymentConfirmationId))
			return false;
		if (town == null) {
			if (other.town != null)
				return false;
		} else if (!town.equals(other.town))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Family [id=" + id + ", familyNameCode=" + familyNameCode + ", town=" + town + ", adultCount="
				+ adultCount + ", childCount=" + childCount + ", paymentConfirmationId=" + paymentConfirmationId
				+ ", familyMembers=" + familyMembers + "]";
	}

}
